<html><head>
<title>ディシジョンテーブル件数カウントツール</title>
<style type="text/css">
body {
    font-size : 9pt;
}
h1 {
    font-size : 10pt;
}
table {
    border-collapse: collapse;
}
th, td {
    border: 1px solid gray;
    white-space: nowrap;
}
thead {
    background-color: LightGreen;
}
tfoot {
    background-color: Pink;
}
</style>
<script type="text/javascript" src="js/Utility.js"></script>
<script type="text/javascript" src="js/TableOperation.js"></script>
<script type="text/javascript" src="js/Connection.js"></script>
<script type="text/javascript" src="js/FileHandle.js"></script>
<script type="text/javascript"><!--

var fs = new ActiveXObject("Scripting.FileSystemObject");

var TIMEOUT = 0;

var ph = {};

function Execute(path, flag) {
	clearMessage();
	document.getElementById('result').innerHTML = "";

	if(document.URL.match(/^[^\/]+\/\/[\/\\]{2}/))
		if(!confirm("ツールの実行パスにネットワークパスが指定されているためファイルの数だけネットワーク警告が発生します。\n"
			+ "ツールをローカルディスクにコピーして実行することをおすすめします。\n実行してもよろしいですか？"))
			return;

	ph.files   = [];
	ph.count   = {};
	ph.Folders = [path];
	ph.flag    = flag;
	
	setTimeout("Phase0()", TIMEOUT);
}

//====================================================================================================================
function Phase0() {
	var folder = fs.GetFolder(ph.Folders[0]);
	var em = new Enumerator(folder.Files);
	for(em.moveFirst(); !em.atEnd(); em.moveNext()) {
		var file = em.item().Name;
		if(!file.match(/\.xlsx?$/))           { info('<font color="blue">Excelファイルではありません。スキップします</font>:' + file); continue; }
		if(!file.match(/^[\w\-]+_(.+)_単体/)) { info('<font color="blue">単体試験項目ではありません。スキップします</font>:' + file);  continue; }
		ph.files.push({
			path   : ph.Folders[0],
			file   : file,
			name   : RegExp.$1,
			service: file.match(/（サービス）/)
		});
	}
	em = null;

	if(ph.flag) {
		var em = new Enumerator(folder.SubFolders);
		for(em.moveFirst(); !em.atEnd(); em.moveNext())
			ph.Folders.push(ph.Folders[0] + "\\" + em.item().Name);
		em = null;
	}
	ph.Folders.shift();

	var p = -1;
	if(ph.Folders.length > 0)    { p = 0; info('サブフォルダを検索しています:' + ph.Folders[0]); }
	else if(ph.files.length > 0) { p = 1; ph.file  = 0; }
	else info("<font color='red'>対象のファイルが見当たりませんでした。パスを見直してください</font>");
	if(p >= 0) setTimeout("Phase" + p + "()", TIMEOUT);
}

//====================================================================================================================
function Phase1() {
	if(!('file' in ph)) return;

	ph.name    = ph.files[ph.file].name;
	info("ファイル：" + ph.files[ph.file].file + " (" + (ph.files[ph.file].service ? "サービスの単体試験成績表" : "ディシジョンテーブル") + "を解析します)");

	ph.cn = new Connection(MSExcel12_ODBC_Driver, {
		file : ph.files[ph.file].path + "/" + ph.files[ph.file].file,
		readonly : 1
	});

	var func = 'Phase';
	if(ph.cn.exists) { ph.table = 0; func += 2; }
	else {
		ph.file++;
		func += (ph.file < ph.files.length ? 1 : 3);
	}
	setTimeout(func + '()', TIMEOUT);
}

//====================================================================================================================
function Phase2() {
	if(!('file' in ph) || !('table' in ph)) return;
	
	var table = ph.cn.table[ph.table];

	if(table && table.match(/^'?[\w\-]+\$'?$/)) {
		var ret = ph.files[ph.file].service ? count_service() : count_class();
		if(!ret) info('<font color="brue">試験項目が取得できませんでした</font> : '+ ph.files[ph.file].file + "->" + table)
	}
	
	var func = 'Phase';
	ph.table++;
	if(ph.table < ph.cn.table.length) func += 2;
	else {
		ph.cn.final();
		ph.cn = null;
		delete(ph.cn);

		ph.table = 0;
		ph.file++;
		func += (ph.file < ph.files.length ? 1 : 3);
	}
	setTimeout(func + '()', TIMEOUT);
}

//クラス===========================================================================================================
function count_class() {
	var file  = ph.files[ph.file].file;
	var cn = ph.cn;
	var table = cn.table[ph.table];

	if(!(file in ph.count))
		ph.count[file] = {
			name	: ph.name,
			件数	: 0,
			済		: 0,
			実施	: 0,
			OK		: 0,
			NG		: 0,
			date	: {},
			sheet	: []
		};
	var count = ph.count[file]
	count.sheet.push({});

	// クラス物理名
	cn.select("[F3] FROM [" + table + "] WHERE " + cn.row(table, "B") + " LIKE 'クラス物理名'");
	if(!cn.eof()) count.value = cn.item("F3");
	cn.close();

	// メソッド物理名
	var sql = cn.row(table, "R5") + " FROM [" + table + "] WHERE " + cn.row(table, "B") + " LIKE 'メソッド物理名'";
	cn.select(sql);
	if(!cn.eof()) count.sheet[count.sheet.length - 1].value = cn.item('R5');
	cn.close();

	// メソッド論理名
	var sql = cn.row(table, "F6") + " FROM [" + table + "] WHERE " + cn.row(table, "R7") + " LIKE 'メソッド論理名'";
	cn.select(sql);
	if(!cn.eof()) count.sheet[count.sheet.length - 1].name = cn.item('R8');
	cn.close();

	// 試験項目の取得
	var area = [];
	cn.select("* FROM [" + table + "] WHERE " + cn.row(table, "R7") + " LIKE '%試験項目ＩＤ%'");
	if(!cn.eof()) {
		for(var i = 0; i < cn.count(); i++) {
			var value = cn.item(i);
			if(null == value || !value.match(/^\w(\d+)$/)) continue;
			area.push({ name : cn.name(i), code : value, cnt : 1, exe : 0, ok : 0, ng : 0, inv : 0 });
		}
	}
	cn.close()
	if (area.length == 0) return false;

	var testArea = []; for(var i in area) testArea.push('[' + area[i].name + ']'); testArea = testArea.join(', ');

	// テスト観点項目の行に"済"がある場合は集計対象外とする。
	cn.select(testArea + " FROM [" + table + "] WHERE " +cn.row(table, "B") + " LIKE 'テスト観点項目'");
	if(!cn.eof()) {
		for (var i = 0; i < cn.count(); i++) {
			var value = cn.item(i); if(value != null && value.match(/^済$/)) area[i].inv = 1;
		}
	}
	cn.close();

	// 結果欄のチェック(OKか否か)
	sql = []; for(var i = 2; i < 7; i++) sql.push(cn.row(table, 'R' + i) + " IS NULL");
	cn.select(testArea + " FROM [" + table + "] WHERE " + sql.join(" AND ") + " AND "+ cn.row(table, 'R7') + " LIKE '結果'");
	if(!cn.eof()) {
		for (var i = 0; i < cn.count(); i++) {
			var value = cn.item(i); if(value == null || area[i].inv) continue;
			area[i].exe = 1; if(value.match(/^OK$/i)) area[i].ok = 1;
		}
	}
	cn.close();
	
	// 実施日の取得
	var flag = false;
	var sql = []; for(var i in area) sql.push("[" + area[i].name + "] IS NOT NULL");
	cn.select(testArea + " FROM [" + table + "] WHERE " +cn.row(table, "G") + " LIKE '実施日' AND " + sql.join(' AND '));
	if(!cn.eof()) {
		for(var i = 0; i < cn.count(); i++) {
			var date = cn.item(i); if(!date && area[i].inv) continue;
			if(String(date).match(/^\d+$/)) { area[i].month = parseInt(date); flag = true; continue; }
			if(area[i].inv) continue;
			date = new Date(date).ToString();
			area[i].date = date;
		}
	}
	cn.close();
	
	// 実施日の取得その２
	if(flag) {
		var year = new Date().getFullYear();
		var sql = [];
		for(var i = 2; i < 8; i++) sql.push(cn.row(table, "R" + i) + " IS NULL");
		for(var i in area) sql.push("[" + area[i].name + "] IS NOT NULL");
		for(cn.select(testArea + ", " +cn.row(table, "G") + " FROM [" + table + "] WHERE " + sql.join(' AND ')); !cn.eof(); cn.next()) {
			var s = ""; for (var i in area) { var t = cn.item(area[i].name); if(t) s += t; } if(!s.match(/^\d+$/)) continue;
			for (var i in area) if(!area[i].inv) {
				var date = new Date(year + "/" + area[i].month + "/" + cn.item(area[i].name)).ToString();
				area[i].date = date;
			}
		}
		cn.close();
	}

	// NGの取得
	cn.select(testArea + " FROM [" + table + "] WHERE " +cn.row(table, "G") + " LIKE '障害票'");
	if(!cn.eof()) {
		for(var i = 0; i < cn.count(); i++) {
			var value = cn.item(i); if(!value || area[i].inv) continue;
			if(String(value).match(/\d+\/\d+\/\d+/)) {
				var date = new Date(RegExp.lastMatch).ToString();
				if(area[i].date === date) area[i].ng = 1;
				else {
					var j = 0;
					for(; j < cn.count(); j++) {
						if(!(area[j].date === date)) area[j].ng = 1;
					}
					if(j >= cn.count()) area.push({ name : 'NG', code : 'NG', cnt : 0, exe : 0, ok : 0, ng : 1, inv : 0 });
				}
			}
			area[i].ng = 1;
		}
	}
	for(var i in area) {
		count.件数 += area[i].cnt - area[i].inv;
		count.済   += area[i].inv;
		count.実施 += area[i].exe;
		count.OK   += area[i].ok;
		count.NG   += area[i].ng;
		
		if('date' in area[i]) {
			var date = area[i].date;
			if(!(date in count.date)) count.date[date] = { 実施 : 0, OK : 0, NG : 0 };
			count.date[date].実施 += area[i].exe;
			count.date[date].OK   += area[i].ok;
			count.date[date].NG   += area[i].ng;
		}
	}
var s = [count.name]; for(var d in count.date) s.push(d); trace('DATE:'.bold() +s.join(','));

	return true;
}

//サービス===========================================================================================================
function count_service() {
	var file = ph.files[ph.file].file;
	var cn = ph.cn;
	var table = cn.table[ph.table];
	var name  = file + "$" + table;
	
	if(!(name in ph.count))
		ph.count[name] = {
			name	: ph.name + '(サービス)',
			件数	: 0,
			済		: 0,
			実施	: 0,
			OK		: 0,
			NG		: 0,
			date	: {},
			sheet	: []
		};
	var count = ph.count[name];
	var cnt = {件数 : 0, 済 : 0, 実施 : 0, OK : 0, NG : 0};

	// クラス物理名
	count.value = table.replace(/['$]/, "");	//'
	
	count.sheet.push({});

	var flag = false;
	for(cn.select("* FROM [" + table + "] WHERE " +cn.row(table, "B") + " IS NOT NULL AND " +cn.row(table, "I") + " IS NOT NULL"); !cn.eof(); cn.next()) {
trace(cn.item("B")+","+cn.item("I")+","+cn.item("R11")+","+cn.item("R13"));
		if(!cn.item("B").match(/^\d+$/) || !cn.item("I")) continue;

		count.件数++; flag = true;
		var exe = exe, ok = 0, ng = 0, date, ng_date;
		for(var i = 0; i < 3; i++) {
			if(ok) continue;
			
			var value = cn.item("R" + (i * 3 + 11));
			if(!value) continue;

			var d  = cn.item("R" + (i * 3 + 13))
			if(d != null && !date) date = new Date(d).ToString();

			exe = 1;
			if(value.match(/○/)) ok = 1;
			if(value.match(/×/)) ng = 1;
			
			if(d != null && ng) ng_date = new Date(d).ToString();
		}
		
		
		count.実施 += exe;
		count.OK   += ok;
		count.NG   += ng;
		
		if(date) {
			if(!(   date in count.date)) count.date[   date] = {実施 : 0, OK : 0, NG : 0};
			count.date[date].実施 += exe;
			count.date[date].OK   += ok;
		}
		if(ng_date) {
			if(!(ng_date in count.date)) count.date[ng_date] = {実施 : 0, OK : 0, NG : 0};
			count.date[ng_date].NG += ng;
		}
	}
	cn.close();
var s = [count.name]; for(var d in count.date) s.push(d); trace('DATE:'.bold() +s.join(','));

	return flag;
}

//HTMLの構成====================================================================================================================
function Phase3() {

for(var id in ph.count) { var s = [];  for(var d in ph.count[id].date) s.push(d); trace('DATE'.bold() + ph.count[id].name + ',' + s.join(',')) }
	var sum = { 件数 : 0, 済 : 0, 実施 : 0, OK : 0, NG : 0 };

	var dateList = [];
	var dateCount = [];
	var begin = new Date(document.form.begin.value);
	var end   = new Date(document.form.end.value);
	var max   = begin;
	var min   = end;
	for(var id in ph.count) for(var date in ph.count[id].date) {
		var date = new Date(date);
		if(date < begin || date > end) continue;
		if(date > max) max = date;
		if(date < min) min = date
	}
	for(var date = new Date(min), i = 0; date <= max; date.setDate(date.getDate() + 1), i++) {
		dateList[i] = date.ToString();
		dateCount[i] = { 実施:0, OK:0 };
	}
trace('DATE'.bold() + dateList.join(","));

	var table = document.createElement('TABLE');
	var thead = document.createElement('thead');
	var tr = document.createElement('TR');
	tr.style.fontSize = 'xx-small';
	var ar = ['クラス', '件数', '実施', 'OK', 'NG', '対象外'];
	for(var i in ar) {
		var th = document.createElement('TH');
		if(i > 0) {
			var a = [];
			for(var l = 0; l < ar[i].lenght; l++) a.push(ar[i].charAt(l));
			th.innerHTML = ar[i].split('').join(br);
		} else {
			th.align = 'left';
			th.innerHTML = ar[i];
		}
		tr.appendChild(th);
	}

	var th = document.createElement('TH');
	th.innerHTML = sp;
	tr.appendChild(th);
	for(var i in dateList) {
		var th = document.createElement('TH');
		var ar =  dateList[i].split('/'); ar.shift();
		th.innerHTML = ar.join(br + '/' + br);

		var d = new Date(dateList[i]).getDay();
		if(d == 0) th.style.backgroundColor = "#ffc0cb";
		if(d == 6) th.style.backgroundColor = "#add8e6";
		if(dateList[i] === new Date().ToString()) th.style.backgroundColor = "#7cfc00";
		
		tr.appendChild(th);
	}
	thead.appendChild(tr);
	table.appendChild(thead);

	var tbody = document.createElement('tbody');
	var i = 0, key = [];
	for(var k in ph.count) key[i++] = k;
	key.sort(function(a, b) { return a < b ? -1 : 1; });
	for(var i in key) {

		var obj = ph.count[key[i]];
		sum.件数 += obj.件数;
		sum.済   += obj.済;
		sum.実施 += obj.実施;
		sum.OK   += obj.OK;
		sum.NG   += obj.NG;

		var tr = document.createElement('TR');
		var td = document.createElement('TD');
		td.rowSpan = 2;
		td.innerHTML = obj.name;
		if(obj.value) td.innerHTML += br + "(" + obj.value + ")";
		tr.appendChild(td);

		var ar = ['件数', '実施', 'OK', 'NG', '済'];
		for(var j in ar) {
			var td = document.createElement('TD');
			td.align = 'right'; td.rowSpan = 2;
			td.innerHTML = obj[ar[j]];
			tr.appendChild(td);
		}

		var ar = ['実施', '完了'];
		for(var j in ar) {
			var td = document.createElement('TD');
			td.style['font-size'] = 'x-small';
			td.innerHTML = ar[j];
			tr.appendChild(td);

			var a = j == 0 ? ar[j] : 'OK';
			for(var d in dateList) {
				var td = document.createElement('TD');
				td.align = 'right';
				td.style.fontSize = 'x-small';
				var dy = new Date(dateList[d]).getDay();
				if(dy == 0) td.style.backgroundColor = "#ffc0cb";
				if(dy == 6) td.style.backgroundColor = "#add8e6";
				if(dateList[d] === new Date().ToString()) td.style.backgroundColor = "#7cfc00";
				if(obj.date[dateList[d]]) {
					td.innerHTML = obj.date[dateList[d]][a];
					dateCount[d][a] += obj.date[dateList[d]][a];
				} else td.innerHTML = sp;
				tr.appendChild(td);
			}
			tbody.appendChild(tr);
			tr = document.createElement('TR');
		}
	}
	table.appendChild(tbody);

	var tfoot = document.createElement('tfoot');
	var tr = document.createElement('TR');
	var td = document.createElement('TD');
	td.align = 'left'; td.rowSpan = 2; td.innerHTML = '合計'; tr.appendChild(td);
	var ar = ['件数', '実施', 'OK', 'NG', '済'];
	for(var j in ar) {
		var td = document.createElement('TD');
		td.align = 'right'; td.rowSpan = 2;
		td.innerHTML = sum[ar[j]];
		tr.appendChild(td);
	}

	var ar = ['実施', '完了'];
	for(var j in ar) {
		var td = document.createElement('TD');
		td.style.fontSize = 'x-small';
		td.innerHTML = ar[j];
		tr.appendChild(td);

		var a = j == 0 ? ar[j] : 'OK';
		for(var d in dateList) {
			var td = document.createElement('TD');
			td.style['font-size'] = 'x-small';
			td.align = 'right';
			if(dateCount[d].OK || dateCount[d].実施) td.innerHTML = dateCount[d][a];
			else td.innerHTML = sp;
			tr.appendChild(td);
		}
		tfoot.appendChild(tr);
		tr = document.createElement('TR');
	}
	table.appendChild(tfoot);

	document.getElementById('result').appendChild(table);
//alert(document.getElementById('result').innerHTML);

	document.form.execute.disabled = false;

}

//====================================================================================================================
//--></script>
</head><body>

<form name="form">
	<input type="text" name="begin" size=14 length=10>〜<input type="text" name="end" size=14 length=10><input type="text" name="debug" size=1>
	<br>
	検索パス <span id="ini"></span><br>
	<div style="font-size:x-small">
		<input type="checkbox" name="subfolder" style="width:10px;height:10px;vertical-align:middle;"> サブフォルダも検索する
		&nbsp;
		<input type="button" name="execute" value=" 実行 ">
	</div>
</form>

<div id="result"></div>

</body><script><!--

//====================================================================================================================
// 日付の設定
d = new Date();
document.form.end.value = d.ToString();
d.setDate(d.getDate()+1); d.setMonth(d.getMonth()-1);
document.form.begin.value = d.ToString();

var fileField = new CreateFileField('ini', GetFileName().replace(/\.[^\.]*$/, '.ini'));

//イベント定義====================================================================================================================
document.form.execute.onclick = function() {
	that.DEBUG = parseInt('0'+document.form.debug.value);
	this.disabled = true;
	Execute(fileField.path.value, document.form.subfolder.checked);
	fileField.write()
}

//--></script>

</html>
